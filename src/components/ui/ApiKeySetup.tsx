import { useState } from 'react';
import { validateApiKey, saveApiKey, removeApiKey } from '../../utils/apiKeyManager';
import './ApiKeySetup.css';

interface ApiKeySetupProps {
  onApiKeySet: (apiKey: string) => void;
}

export default function ApiKeySetup({ onApiKeySet }: ApiKeySetupProps) {
  const [apiKey, setApiKey] = useState('');
  const [error, setError] = useState('');
  const [isLoading, setIsLoading] = useState(false);

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setError('');
    setIsLoading(true);

    if (!apiKey.trim()) {
      setError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ API –∫–ª—é—á');
      setIsLoading(false);
      return;
    }

    if (!validateApiKey(apiKey)) {
      setError('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç API –∫–ª—é—á–∞. –ö–ª—é—á –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å "CG-" –∏ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –±—É–∫–≤—ã –∏ —Ü–∏—Ñ—Ä—ã.');
      setIsLoading(false);
      return;
    }

    try {
      // –¢–µ—Å—Ç–∏—Ä—É–µ–º API –∫–ª—é—á –≤—ã–ø–æ–ª–Ω–∏–≤ –ø—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å
      const response = await fetch('https://api.coingecko.com/api/v3/ping', {
        headers: {
          'X-Cg-Demo-Api-Key': apiKey.trim(),
        },
      });

      if (response.ok) {
        saveApiKey(apiKey);
        onApiKeySet(apiKey);
      } else if (response.status === 401) {
        setError('–ù–µ–≤–µ—Ä–Ω—ã–π API –∫–ª—é—á. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∫–ª—é—á–∞.');
      } else {
        setError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ API –∫–ª—é—á–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
      }
    } catch {
      setError('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É.');
    } finally {
      setIsLoading(false);
    }
  };

  const handleClearData = () => {
    removeApiKey();
    setApiKey('');
    setError('');
  };

  return (
    <div className="api-key-setup">
      <div className="api-key-modal">
        <div className="modal-content">
          <h2>üîë –ù–∞—Å—Ç—Ä–æ–π–∫–∞ API –∫–ª—é—á–∞</h2>
          <p className="setup-description">
            –î–ª—è —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Ç—Ä–µ–±—É–µ—Ç—Å—è –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π API –∫–ª—é—á –æ—Ç CoinGecko
          </p>
          
          <div className="instructions">
            <h3>–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å API –∫–ª—é—á:</h3>
            <ol>
              <li>–ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ <a href="https://www.coingecko.com/en/api" target="_blank" rel="noopener noreferrer">coingecko.com/en/api</a></li>
              <li>–ù–∞–∂–º–∏—Ç–µ "Get Your Free API Key Now"</li>
              <li>–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –∏–ª–∏ –≤–æ–π–¥–∏—Ç–µ –≤ –∞–∫–∫–∞—É–Ω—Ç</li>
              <li>–°–∫–æ–ø–∏—Ä—É–π—Ç–µ Demo API Key –∏–∑ dashboard</li>
            </ol>
          </div>

          <form onSubmit={handleSubmit} className="api-key-form">
            <div className="form-group">
              <label htmlFor="apiKey">API –∫–ª—é—á:</label>
              <input
                type="text"
                id="apiKey"
                value={apiKey}
                onChange={(e) => setApiKey(e.target.value)}
                placeholder="CG-xxxxxxxxxxxxxxxxx"
                className={error ? 'error' : ''}
                disabled={isLoading}
              />
              {error && <span className="error-message">{error}</span>}
            </div>

            <div className="form-actions">
              <button 
                type="submit" 
                className="submit-btn"
                disabled={isLoading}
              >
                {isLoading ? '–ü—Ä–æ–≤–µ—Ä–∫–∞...' : '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å'}
              </button>
              <button 
                type="button" 
                onClick={handleClearData}
                className="clear-btn"
                disabled={isLoading}
              >
                –û—á–∏—Å—Ç–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
              </button>
            </div>
          </form>

          <div className="security-note">
            <p><strong>üîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:</strong></p>
            <p>API –∫–ª—é—á —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ –≤–∞—à–µ–º –±—Ä–∞—É–∑–µ—Ä–µ (localStorage) –∏ –Ω–µ –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º.</p>
          </div>
        </div>
      </div>
    </div>
  );
}
